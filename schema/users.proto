syntax = "proto3";

package ccc.schema;

option go_package = "./;schema";

service Users {
  // AddUser - add user after registration.
  rpc AddUser(AddUserRequest) returns (AddUserResponse) {}
  // GetUser - get user by id.
  rpc GetUser(GetUserRequest) returns (GetUserResponse) {}
  // IsUserWithIdExists - check if user with id exist
  rpc IsUserWithIdExists(IsUserWithIdExistsRequest) returns (IsUserWithIdExistsResponse) {}
  // GetUserReferrals - get user referrals
  rpc GetUserReferrals(GetUserReferralsRequest) returns (GetUserReferralsResponse) {}
  // GetUsers - get all user
  rpc GetUsers(GetUsersRequest) returns (GetUsersResponse) {}
}

message AddUserRequest {
  int64 id = 1;
  string firstname = 2;
  string username = 3;
  int64 inviterId = 4;
}

message GetUserRequest {
  int64 id = 1;
}

message IsUserWithIdExistsRequest {
  int64 id = 1;
}

message GetUserReferralsRequest {
  int64 id = 1;
}

message GetUsersRequest {}



message AddUserResponse {}

message GetUserResponse {
  User user = 1;
}

message User {
  int64 id = 1;
  string firstname = 2;
  string username = 3;
}

message IsUserWithIdExistsResponse {
  bool exists = 1;
}

message GetUserReferralsResponse {
  repeated Referrals referrals = 1;
}

message Referrals {
  int64 referralId = 1;
  string firstname = 2;
  string username = 3;
}

message GetUsersResponse {
  repeated User users = 1;
}


