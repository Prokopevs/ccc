version: "3"

services:
  gamedbCont:
    container_name: gamedbCont
    image: postgres
    ports: 
      - "5432:5432"
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      PGDATA: /data/postgres
      restart: unless-stopped
    volumes:
       - ./postgres:/data/postgres
    networks:
      - api
  cache:
    image: redis:7.2.4
    restart: unless-stopped
    networks:
      - api
    ports:
      - '6380:6379'
    command: --requirepass ${RD_PASSWORD}
    environment:
      - REDIS_PASSWORD=${RD_PASSWORD}
  auth-api:
    image: game/auth-api:latest
    restart: unless-stopped
    networks:
      - api
    environment:
      USERS_GRPC_ADDR: users-api:8000
      HTTP_SERVER_ADDR: :4000
      TELEGRAM_TOKEN: ${TELEGRAM_TOKEN}
  users-api:
    image: game/users-api:latest
    restart: unless-stopped
    networks:
      - api
    depends_on:
      - gamedbCont
    environment:
      GRPC_SERVER_ADDR: :8000
      PG_CONN: postgres://${PG_USER}:${PG_PASSWORD}@gamedbCont:5432/gamedb?sslmode=disable
  game-api:
    image: game/game-api:latest
    restart: unless-stopped
    networks:
      - api
    depends_on:
      - auth-api
      - gamedbCont
      - users-api
      - cache
    environment:
      HTTP_ADDR: :4000
      PG_CONN: postgres://${PG_USER}:${PG_PASSWORD}@gamedbCont:5432/gamedb?sslmode=disable
      USERS_GRPC_ADDR: users-api:8000
      KEY: ${KEY}
      IV: ${IV}
      RD_CONN: redis://default:${RD_PASSWORD}@cache:6379/0
  krakend_ce:
    image: devopsfaith/krakend:2.6.2
    volumes:
      - ./krakend:/etc/krakend
    restart: unless-stopped
    ports:
      - "8080:8080"
    command: ["run", "-d", "-c", "/etc/krakend/krakend.json"]
    depends_on:
      - auth-api
      - users-api
      - game-api
    networks:
      - api
  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    ports:
      - "9090:9090"
    networks:
      - api
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"
  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    ports:
      - "3000:3000"
    networks:
      - api
    environment:
      GF_SECURITY_ADMIN_USER: krakend
      GF_SECURITY_ADMIN_PASSWORD: krakend
      GF_AUT_ANONYMOUS_ENABLED: "true"
    volumes:
      - "./conf/provisioning/datasources:/etc/grafana/provisioning/datasources"
      - "./conf/provisioning/dashboards:/etc/grafana/provisioning/dashboards"
      - "./conf/data/dashboards:/var/lib/grafana/dashboards"

networks:
  api:
    driver: bridge
